[
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_advanced_filtering_combinations",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_advanced_ranking_factors",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_combined_search_results_ranking",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_filtering_by_chapter_and_document",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_full_text_search_with_highlighting",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_mrr_calculation",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_query_optimization",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_search_analytics",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_search_performance_metrics",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_search_with_empty_and_edge_cases",
  "test_search_filtering_integration.py::TestSearchFilteringIntegration::test_snippet_generation_with_query_context",
  "tests/test_card_generation.py::TestCardGenerationService::test_calculate_card_difficulty_cloze",
  "tests/test_card_generation.py::TestCardGenerationService::test_calculate_card_difficulty_definition",
  "tests/test_card_generation.py::TestCardGenerationService::test_calculate_card_difficulty_theorem",
  "tests/test_card_generation.py::TestCardGenerationService::test_calculate_text_similarity",
  "tests/test_card_generation.py::TestCardGenerationService::test_calculate_text_similarity_no_overlap",
  "tests/test_card_generation.py::TestCardGenerationService::test_create_cloze_text",
  "tests/test_card_generation.py::TestCardGenerationService::test_extract_key_terms",
  "tests/test_card_generation.py::TestCardGenerationService::test_extract_theorem_name",
  "tests/test_card_generation.py::TestCardGenerationService::test_extract_theorem_name_alternative_format",
  "tests/test_card_generation.py::TestCardGenerationService::test_find_related_knowledge",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_and_save_cards_integration",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_cards_from_knowledge",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_cards_with_figures",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_cloze_cards",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_cloze_cards_no_entities",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_hotspots_from_knowledge",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_image_hotspot_cards",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_qa_cards_definition",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_qa_cards_fact",
  "tests/test_card_generation.py::TestCardGenerationService::test_generate_qa_cards_theorem",
  "tests/test_card_generation.py::TestCardGenerationService::test_get_generation_statistics",
  "tests/test_card_generation.py::TestCardGenerationService::test_get_generation_statistics_empty",
  "tests/test_card_generation.py::TestCardGenerationService::test_hotspot_to_dict",
  "tests/test_card_generation.py::TestCardGenerationService::test_parse_definition_colon_format",
  "tests/test_card_generation.py::TestCardGenerationService::test_parse_definition_failure",
  "tests/test_card_generation.py::TestCardGenerationService::test_parse_definition_success",
  "tests/test_card_generation.py::TestCardGenerationService::test_save_generated_cards",
  "tests/test_card_generation.py::TestCardGenerationService::test_save_generated_cards_error_handling",
  "tests/test_card_generation.py::TestCardGenerationService::test_select_entities_for_cloze",
  "tests/test_card_generation.py::TestCardGenerationService::test_service_initialization",
  "tests/test_chapter_db_service.py::test_create_chapters",
  "tests/test_chapter_db_service.py::test_delete_chapters_by_document",
  "tests/test_chapter_db_service.py::test_get_chapter",
  "tests/test_chapter_db_service.py::test_get_chapters_by_document",
  "tests/test_chapter_db_service.py::test_update_chapter_content",
  "tests/test_chapter_extraction.py::TestChapterCandidate::test_chapter_candidate_creation",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_assign_content_to_chapters",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_candidates_to_chapters",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_create_single_chapter",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_extract_chapters_fallback",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_extract_from_heuristics",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_filter_candidates",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_find_heading_candidates",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_heading_level_determination",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_pattern_matching",
  "tests/test_chapter_extraction.py::TestChapterExtractor::test_text_similarity",
  "tests/test_chapter_extraction.py::TestExtractedChapter::test_extracted_chapter_creation",
  "tests/test_chapter_extraction.py::TestExtractedChapter::test_extracted_chapter_with_content",
  "tests/test_deduplication.py::TestDeduplicationService::test_cloze_card_deduplication",
  "tests/test_deduplication.py::TestDeduplicationService::test_deduplication_config",
  "tests/test_deduplication.py::TestDeduplicationService::test_deduplication_quality_validation",
  "tests/test_deduplication.py::TestDeduplicationService::test_duplicate_detection",
  "tests/test_deduplication.py::TestDeduplicationService::test_empty_card_list",
  "tests/test_deduplication.py::TestDeduplicationService::test_exact_match_detection",
  "tests/test_deduplication.py::TestDeduplicationService::test_full_deduplication_process",
  "tests/test_deduplication.py::TestDeduplicationService::test_hotspot_comparison",
  "tests/test_deduplication.py::TestDeduplicationService::test_metadata_similarity",
  "tests/test_deduplication.py::TestDeduplicationService::test_primary_card_selection",
  "tests/test_deduplication.py::TestDeduplicationService::test_semantic_similarity_calculation",
  "tests/test_deduplication.py::TestDeduplicationService::test_single_card",
  "tests/test_deduplication.py::TestDeduplicationService::test_source_traceability",
  "tests/test_embedding_service.py::TestEmbeddingService::test_calculate_similarity",
  "tests/test_embedding_service.py::TestEmbeddingService::test_calculate_similarity_error_handling",
  "tests/test_embedding_service.py::TestEmbeddingService::test_calculate_similarity_zero_vectors",
  "tests/test_embedding_service.py::TestEmbeddingService::test_find_duplicate_knowledge",
  "tests/test_embedding_service.py::TestEmbeddingService::test_generate_embedding_empty_text",
  "tests/test_embedding_service.py::TestEmbeddingService::test_generate_embedding_error_handling",
  "tests/test_embedding_service.py::TestEmbeddingService::test_generate_embedding_success",
  "tests/test_embedding_service.py::TestEmbeddingService::test_generate_embeddings_batch",
  "tests/test_embedding_service.py::TestEmbeddingService::test_generate_embeddings_batch_empty",
  "tests/test_embedding_service.py::TestEmbeddingService::test_get_model_lazy_loading",
  "tests/test_embedding_service.py::TestEmbeddingService::test_init",
  "tests/test_embedding_service.py::TestEmbeddingService::test_search_similar_knowledge",
  "tests/test_embedding_service.py::TestEmbeddingService::test_update_knowledge_embeddings",
  "tests/test_embedding_service.py::TestEmbeddingService::test_update_knowledge_embeddings_no_knowledge",
  "tests/test_embedding_service.py::TestGlobalEmbeddingService::test_global_instance",
  "tests/test_entity_extraction.py::TestEntityExtractionService::test_extract_entities_english",
  "tests/test_entity_extraction.py::TestEntityExtractionService::test_language_detection_english",
  "tests/test_export_service.py::TestExportService::test_card_content_formatting",
  "tests/test_export_service.py::TestExportService::test_difficulty_conversion",
  "tests/test_export_service.py::TestExportService::test_export_anki_csv",
  "tests/test_export_service.py::TestExportService::test_export_empty_data",
  "tests/test_export_service.py::TestExportService::test_export_jsonl_backup",
  "tests/test_export_service.py::TestExportService::test_export_notion_csv",
  "tests/test_export_service.py::TestExportService::test_export_with_filters",
  "tests/test_export_service.py::TestExportService::test_get_card_category",
  "tests/test_export_service.py::TestExportService::test_import_error_handling",
  "tests/test_export_service.py::TestExportService::test_import_jsonl_backup",
  "tests/test_figure_service.py::TestFigureService::test_create_figure_from_pair",
  "tests/test_figure_service.py::TestFigureService::test_delete_figure",
  "tests/test_figure_service.py::TestFigureService::test_delete_figure_not_found",
  "tests/test_figure_service.py::TestFigureService::test_edge_cases",
  "tests/test_figure_service.py::TestFigureService::test_filter_images_for_chapter",
  "tests/test_figure_service.py::TestFigureService::test_filter_text_blocks_for_chapter",
  "tests/test_figure_service.py::TestFigureService::test_filter_with_no_page_range",
  "tests/test_figure_service.py::TestFigureService::test_get_figure_by_id",
  "tests/test_figure_service.py::TestFigureService::test_get_figures_for_chapter",
  "tests/test_figure_service.py::TestFigureService::test_get_pairing_statistics",
  "tests/test_figure_service.py::TestFigureService::test_process_figures_for_chapter",
  "tests/test_figure_service.py::TestFigureService::test_process_figures_no_images",
  "tests/test_figure_service.py::TestFigureService::test_reprocess_figure_captions",
  "tests/test_figure_service.py::TestFigureService::test_update_figure_caption",
  "tests/test_figure_service.py::TestFigureService::test_update_figure_caption_not_found",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_confidence_scoring",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_different_page_handling",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_distance_calculation",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_edge_cases",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_fallback_caption_selection",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_full_pairing_process",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_multiple_images_pairing",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_no_caption_found",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_pattern_matching_chinese",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_pattern_matching_english",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_pattern_matching_fig_abbreviation",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_proximity_based_matching",
  "tests/test_image_caption_service.py::TestImageCaptionService::test_validation_metrics",
  "tests/test_knowledge_extraction.py::TestKnowledgeExtractionService::test_extract_definition_knowledge",
  "tests/test_knowledge_extraction.py::TestKnowledgeExtractionService::test_initialization",
  "tests/test_knowledge_extraction.py::TestKnowledgeExtractionService::test_pattern_compilation",
  "tests/test_models.py::test_card_model",
  "tests/test_models.py::test_card_model_structure",
  "tests/test_models.py::test_chapter_model",
  "tests/test_models.py::test_chapter_model_structure",
  "tests/test_models.py::test_document_model",
  "tests/test_models.py::test_document_model_structure",
  "tests/test_models.py::test_enum_values",
  "tests/test_models.py::test_figure_model",
  "tests/test_models.py::test_figure_model_structure",
  "tests/test_models.py::test_knowledge_model",
  "tests/test_models.py::test_knowledge_model_structure",
  "tests/test_models.py::test_model_defaults",
  "tests/test_models.py::test_model_imports",
  "tests/test_models.py::test_model_relationships",
  "tests/test_models.py::test_model_repr",
  "tests/test_models.py::test_srs_model_structure",
  "tests/test_parsers.py::TestAsyncParsing::test_mock_parser_async",
  "tests/test_parsers.py::TestBaseParser::test_image_data_creation",
  "tests/test_parsers.py::TestBaseParser::test_parsed_content_creation",
  "tests/test_parsers.py::TestBaseParser::test_text_block_creation",
  "tests/test_parsers.py::TestBaseParser::test_text_block_invalid_bbox",
  "tests/test_parsers.py::TestDocxParser::test_docx_parser_initialization",
  "tests/test_parsers.py::TestDocxParser::test_supports_file",
  "tests/test_parsers.py::TestGlobalFunctions::test_get_parser",
  "tests/test_parsers.py::TestGlobalFunctions::test_get_parser_for_file",
  "tests/test_parsers.py::TestGlobalFunctions::test_get_supported_extensions",
  "tests/test_parsers.py::TestGlobalFunctions::test_is_file_supported",
  "tests/test_parsers.py::TestMarkdownParser::test_extract_front_matter",
  "tests/test_parsers.py::TestMarkdownParser::test_markdown_parser_initialization",
  "tests/test_parsers.py::TestMarkdownParser::test_parse_sections",
  "tests/test_parsers.py::TestMarkdownParser::test_supports_file",
  "tests/test_parsers.py::TestPDFParser::test_pdf_parser_initialization",
  "tests/test_parsers.py::TestPDFParser::test_supports_file",
  "tests/test_parsers.py::TestPDFParser::test_validate_file_not_found",
  "tests/test_parsers.py::TestPDFParser::test_validate_unsupported_file",
  "tests/test_parsers.py::TestParserFactory::test_factory_initialization",
  "tests/test_parsers.py::TestParserFactory::test_get_parser_for_file",
  "tests/test_parsers.py::TestParserFactory::test_get_supported_extensions",
  "tests/test_parsers.py::TestParserFactory::test_is_file_supported",
  "tests/test_parsers.py::TestParserFactory::test_register_custom_parser",
  "tests/test_parsers.py::TestParserFactory::test_register_invalid_parser",
  "tests/test_parsers.py::TestParserFactory::test_unregister_parser",
  "tests/test_privacy_security.py::TestAccessController::test_hash_sensitive_data",
  "tests/test_privacy_security.py::TestAccessController::test_hash_user_identifier",
  "tests/test_privacy_security.py::TestAccessController::test_rate_limiting",
  "tests/test_privacy_security.py::TestAccessController::test_sanitize_user_input",
  "tests/test_privacy_security.py::TestDataProtection::test_anonymize_document_metadata",
  "tests/test_privacy_security.py::TestDataProtection::test_clean_text_content",
  "tests/test_privacy_security.py::TestDataProtection::test_secure_delete_file",
  "tests/test_privacy_security.py::TestIntegration::test_end_to_end_secure_upload",
  "tests/test_privacy_security.py::TestIntegration::test_privacy_mode_configuration",
  "tests/test_privacy_security.py::TestIntegration::test_security_features_enabled",
  "tests/test_privacy_security.py::TestPrivacyFilter::test_anonymize_log_message",
  "tests/test_privacy_security.py::TestPrivacyFilter::test_preserve_non_sensitive_data",
  "tests/test_privacy_security.py::TestPrivacyService::test_llm_service_privacy_mode",
  "tests/test_privacy_security.py::TestPrivacyService::test_privacy_manager_status",
  "tests/test_privacy_security.py::TestPrivacyService::test_privacy_settings_validation",
  "tests/test_privacy_security.py::TestSecurityLogger::test_log_file_upload",
  "tests/test_privacy_security.py::TestSecurityLogger::test_log_security_event",
  "tests/test_privacy_security.py::TestSecurityValidator::test_detect_malicious_content",
  "tests/test_privacy_security.py::TestSecurityValidator::test_generate_secure_filename",
  "tests/test_privacy_security.py::TestSecurityValidator::test_reject_invalid_file_type",
  "tests/test_privacy_security.py::TestSecurityValidator::test_reject_oversized_file",
  "tests/test_privacy_security.py::TestSecurityValidator::test_sanitize_filename",
  "tests/test_privacy_security.py::TestSecurityValidator::test_validate_pdf_file",
  "tests/test_search_service.py::TestAdvancedRanking::test_calculate_advanced_ranking",
  "tests/test_search_service.py::TestAdvancedRanking::test_ranking_content_bonus",
  "tests/test_search_service.py::TestAdvancedRanking::test_ranking_phrase_bonus",
  "tests/test_search_service.py::TestAdvancedRanking::test_ranking_position_bonus",
  "tests/test_search_service.py::TestAdvancedRanking::test_ranking_term_coverage",
  "tests/test_search_service.py::TestGlobalSearchService::test_global_instance",
  "tests/test_search_service.py::TestPerformanceMetrics::test_calculate_mrr_mixed",
  "tests/test_search_service.py::TestPerformanceMetrics::test_calculate_mrr_perfect",
  "tests/test_search_service.py::TestPerformanceMetrics::test_calculate_precision_at_k",
  "tests/test_search_service.py::TestPerformanceMetrics::test_optimize_search_query",
  "tests/test_search_service.py::TestSearchFilters::test_custom_filters",
  "tests/test_search_service.py::TestSearchFilters::test_default_filters",
  "tests/test_search_service.py::TestSearchHighlighting::test_create_snippet_with_query",
  "tests/test_search_service.py::TestSearchHighlighting::test_extract_query_terms",
  "tests/test_search_service.py::TestSearchHighlighting::test_find_best_snippet",
  "tests/test_search_service.py::TestSearchHighlighting::test_highlight_text_case_insensitive",
  "tests/test_search_service.py::TestSearchHighlighting::test_highlight_text_simple",
  "tests/test_search_service.py::TestSearchHighlighting::test_highlight_text_word_boundaries",
  "tests/test_search_service.py::TestSearchResult::test_search_result_creation",
  "tests/test_search_service.py::TestSearchService::test_apply_card_filters",
  "tests/test_search_service.py::TestSearchService::test_apply_knowledge_filters",
  "tests/test_search_service.py::TestSearchService::test_calculate_simple_relevance",
  "tests/test_search_service.py::TestSearchService::test_card_to_search_result",
  "tests/test_search_service.py::TestSearchService::test_create_snippet_long_text",
  "tests/test_search_service.py::TestSearchService::test_create_snippet_sentence_boundary",
  "tests/test_search_service.py::TestSearchService::test_create_snippet_short_text",
  "tests/test_search_service.py::TestSearchService::test_get_search_suggestions_error_handling",
  "tests/test_search_service.py::TestSearchService::test_get_search_suggestions_short_query",
  "tests/test_search_service.py::TestSearchService::test_get_search_suggestions_success",
  "tests/test_search_service.py::TestSearchService::test_hybrid_search_combination",
  "tests/test_search_service.py::TestSearchService::test_init",
  "tests/test_search_service.py::TestSearchService::test_knowledge_to_search_result",
  "tests/test_search_service.py::TestSearchService::test_search_empty_query",
  "tests/test_search_service.py::TestSearchService::test_search_full_text",
  "tests/test_search_service.py::TestSearchService::test_search_hybrid",
  "tests/test_search_service.py::TestSearchService::test_search_invalid_type",
  "tests/test_search_service.py::TestSearchService::test_search_limit_validation",
  "tests/test_search_service.py::TestSearchService::test_search_semantic",
  "tests/test_search_service.py::TestSearchService::test_semantic_search_with_filters",
  "tests/test_srs_service.py::TestSRSService::test_create_srs_record",
  "tests/test_srs_service.py::TestSRSService::test_create_srs_record_with_user",
  "tests/test_srs_service.py::TestSRSService::test_ease_factor_minimum",
  "tests/test_srs_service.py::TestSRSService::test_get_cards_due_today",
  "tests/test_srs_service.py::TestSRSService::test_get_due_cards",
  "tests/test_srs_service.py::TestSRSService::test_get_due_cards_with_limit",
  "tests/test_srs_service.py::TestSRSService::test_get_overdue_cards",
  "tests/test_srs_service.py::TestSRSService::test_get_review_statistics",
  "tests/test_srs_service.py::TestSRSService::test_get_review_statistics_empty",
  "tests/test_srs_service.py::TestSRSService::test_get_srs_record",
  "tests/test_srs_service.py::TestSRSService::test_get_srs_record_with_user",
  "tests/test_srs_service.py::TestSRSService::test_grade_card_first_repetition",
  "tests/test_srs_service.py::TestSRSService::test_grade_card_invalid_grade",
  "tests/test_srs_service.py::TestSRSService::test_grade_card_mature_repetition",
  "tests/test_srs_service.py::TestSRSService::test_grade_card_nonexistent",
  "tests/test_srs_service.py::TestSRSService::test_grade_card_perfect_performance",
  "tests/test_srs_service.py::TestSRSService::test_grade_card_poor_performance",
  "tests/test_srs_service.py::TestSRSService::test_grade_card_second_repetition",
  "tests/test_srs_service.py::TestSRSService::test_reset_card_progress",
  "tests/test_srs_service.py::TestSRSService::test_reset_nonexistent_card",
  "tests/test_storage.py::TestLocalStorage::test_concurrent_operations",
  "tests/test_storage.py::TestLocalStorage::test_delete_existing_file",
  "tests/test_storage.py::TestLocalStorage::test_delete_nonexistent_file",
  "tests/test_storage.py::TestLocalStorage::test_exists",
  "tests/test_storage.py::TestLocalStorage::test_generate_storage_path",
  "tests/test_storage.py::TestLocalStorage::test_get_full_path",
  "tests/test_storage.py::TestLocalStorage::test_get_url",
  "tests/test_storage.py::TestLocalStorage::test_get_url_nonexistent_file",
  "tests/test_storage.py::TestLocalStorage::test_multiple_files_same_name",
  "tests/test_storage.py::TestLocalStorage::test_retrieve_nonexistent_file",
  "tests/test_storage.py::TestLocalStorage::test_save_and_retrieve_bytes",
  "tests/test_storage.py::TestLocalStorage::test_save_and_retrieve_file_object",
  "tests/test_storage.py::TestLocalStorage::test_save_creates_directories",
  "tests/test_storage.py::TestLocalStorage::test_save_invalid_file_data",
  "tests/test_storage.py::TestLocalStorage::test_save_with_content_type",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_calculate_text_complexity",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_calculate_text_similarity",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_clean_text_block",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_create_segment",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_extract_key_terms",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_extract_meaningful_words",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_merge_segments",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_merge_similar_segments",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_normalize_text",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_optimize_segment_sizes",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_segment_empty_blocks",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_segment_single_block_large",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_segment_single_block_optimal_size",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_segment_single_block_small",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_segment_text_blocks_integration",
  "tests/test_text_segmentation.py::TestTextSegmentationService::test_split_large_block_with_sentences"
]